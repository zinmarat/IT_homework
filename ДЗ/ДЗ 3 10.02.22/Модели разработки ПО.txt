Модели разработки ПО
(Soft ware Development Model)

Водопадная модель (waterfall model)

Есть четкий план, такая пятилетка. Построить 5 заводов, 500 км дорог и выплавить 5 млн тон стали. Какие заводы будут востребованы через 5 лет, куда строить 500 км дорог, куда девать 5 млн стали? Это нужно знать вначале, в итоге может оказаться, что результат есть, но смысла в нём меньше, чем ожидалось. Как оказалось дороги проложены там, где практически не ездят, заводы выпускают маловостребованную продукцию, а такая сталь не нужна, потому что через пять лет нужен, к примеру, титан или другой сплав, или сталь другой марки.
Данная модель хороша когда технические требования не подвержены изменениям, они обусловлены физическими постоянными (толщина, вес, температурная устойчивость), а требования заказчика стабильны. 
Подходит в медицине, обороне, космических исследованиях. Не подходят для условий обусловленных постоянной волатильностью или в сфере с высокоскоростным уровнем развития и прогресса либо нестабильными, непредсказуемыми требованиями законодательства, например, криптовалюта. Минус -- относительно дорого, но подходят для простых моделей. В случае неуспеха всё нужно начинать сначала. Подходит, когда точно знаешь, что тебе нужно и ясно видишь шаги разработки, предвидишь ожидаемые сложности.

Компание применяющие в прошлом или настоящем: Cisco, Microsoft IT, IBM, EPAM, AT Consulting, SAP.

V образная модель
(V model)

Развитие модели водопад при которой обратная связь на каждом этапе разработки учитывается для создания конечного продукта, поэтому окончательный продукт может отличаться от ранее заявленного, возможно, в лучшую сторону, или, возможно, образ обрел более конкретные формы. Тестирование производится с самых первых шагов разработки проекта, каждая ступень разработки конечного продукта (системные и технические требования, пользовательские требования) до фактической разработки и отладки соотносится с результатом работы (после физического воплощения продукта) что позволяет уменьшить риски при приемном, системном тестировании,  предотвратить перетекание потенциальных, но вовремя выявленных угроз, в реальные.

Компание применяющие в прошлом или настоящем: аэрокосмическая компания IABG.

Итерационная инкрементальная модель (iterative model, incremental model) 

Многократное прохождение циклов тестирования (итерации) с приращение функциональности (инкрементацией). Модель разработки декомпозируется на множество небольших функций, которые являются частью целой программы, каждая функция проходит стадию тестирования, после успешного прохождения функции добавляются одна к другой, усиливается функционал (система) в целом. Проводится компонентное тестирование, состоящие из тестирования модулей и тестирования их системной интеграции. В итоге как такого конечного продукта может и не быть, каждое следующее добавление функциональности расширяет его возможности, делая предыдущие сборки (build) промежуточными.
Заказчик каждый раз по итогам спринта получает готовый продукт с тем или иным набором функционала, и в идеале каждый раз получает удовольствие :)
Плюсы: заказчик может дать крайне неточное, возможно, двусмысленное, даже противоречивое задание, однако с каждым билдом продукт может также меняться и подстраиваются под изменяющиеся требованиями заказчика.
Обратная связь от заказчика применяется с самого начала разработки и до конца проекта.
Данная модель подходит для длительных, сложных, многомерных проектов.
Минус: модель дорогая, громоздкая, что обусловлено большим запасом прочности и гибкости модели.

Компание применяющие в прошлом или настоящем: Gillette, Coca-cola, Cadbury, Sainsbury's.

Спиральная модель (spiral model)

Вариант инкрементно-итерационной модели с упором на анализ рисков.
Перед разработкой проводится создание прототипа и анализ рисков.
Плюс: значительная экономия средств заказчика, так как анализ рисков стоит дешевле разработки и тестирования билда. Возможность создания одного или нескольких простых прототипов для демонстрации. Требования заказчика могут многократно меняться по ходу проекта.

Компание применяющие в прошлом или настоящем: IBM, Microsoft, Patni Computers, Tata Consultancy.

Гибкая модель (agile model)

Набор лучших практик предыдущих моделей с уменьшением документооборота между заказчиком и исполнителем (разработка важнее исчерпывающей документации), возможность менять приоритеты и вектор разработки на ходу (готовность к изменениям важнее следования первоначальному плану). 
Плюс: быстрая реакция на изменения, необходимо меньше документации, постоянный контакт разработчика и заказчика, что также означает, что заказчик получает то, что попросил и в том виде, в котором привык, что снижает необходимость исчерпывающих руководств в условиях перманентных изменений условий.
Минус: плохо подходит для больших и сложных проектов.

Компание применяющие в прошлом или настоящем: Netflix, PlayStation Network, Apple, IBM, Microsoft, Procter & Gamble, LEGO Digital Solutions.